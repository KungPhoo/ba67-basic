// DO NOT EDIT THIS FILE.
// IT GETS GENERATED BY markdown_parser.cpp
// WHEN RUNING A DEBUG BUILD.
{"DATA", R"RAW(DATA value, value, string, "string with spaces", ...)RAW"}
,{"DELETE", R"RAW(DELETE from [- to])RAW"}
,{"DIM", R"RAW(DIM var(size))RAW"}
,{"ON", R"RAW(ON expr GOTO/GOSUB line1, line2, ...)RAW"}
,{"FOR", R"RAW(FOR var = start TO end [STEP increment])RAW"}
,{"GOSUB", R"RAW(GOSUB line)RAW"}
,{"GOTO", R"RAW(GOTO line)RAW"}
,{"IF", R"RAW(IF condition THEN statement|line_number_)RAW"}
,{"LET", R"RAW(LET var = expr)RAW"}
,{"KEY", R"RAW(KEY [index, string])RAW"}
,{"NEXT", R"RAW(NEXT [var])RAW"}
,{"RCHARDEF", R"RAW(RCHARDEF char$, mono, bits1, bits2, ..., bits8)RAW"}
,{"READ", R"RAW(READ var[, var [, var2] ])RAW"}
,{"RESTORE", R"RAW(RESTORE [line])RAW"}
,{"RETURN", R"RAW(RETURN)RAW"}
,{"STEP", R"RAW(FOR var=start TO end STEP increment)RAW"}
,{"THEN", R"RAW(IF condition THEN expression|line)RAW"}
,{"TO", R"RAW(FOR var=start TO end [STEP increment])RAW"}
,{"AUTO", R"RAW(AUTO [n])RAW"}
,{"CLOSE", R"RAW(CLOSE fileno)RAW"}
,{"CLR", R"RAW(CLR)RAW"}
,{"COLOR", R"RAW(COLOR source, color)RAW"}
,{"CHDIR", R"RAW(CHDIR directory)RAW"}
,{"CATALOG", R"RAW(CATALOG)RAW"}
,{"CHAR", R"RAW(CHAR color, column, line, text$[, inverse])RAW"}
,{"CHARDEF", R"RAW(CHARDEF char$, bytes, [more bytes])RAW"}
,{"END", R"RAW(END)RAW"}
,{"FAST", R"RAW(FAST)RAW"}
,{"FIND", R"RAW(FIND "print*hello world")RAW"}
,{"GET", R"RAW(GET a$ [, b$, ...])RAW"}
,{"GRAPHIC", R"RAW(GRAPHIC mode5)RAW"}
,{"HELP", R"RAW(HELP command)RAW"}
,{"INPUT", R"RAW(INPUT var)RAW"}
,{"LIST", R"RAW(LIST)RAW"}
,{"LOAD", R"RAW(LOAD "bas*folder/*.bas")RAW"}
,{"MOVSPR", R"RAW(MOVSPR number, x25, y50)RAW"}
,{"NEW", R"RAW(NEW)RAW"}
,{"MODULE", R"RAW(MODULE name)RAW"}
,{"OPEN", R"RAW(OPEN fileno, "filename , MODE")RAW"}
,{"PLAY", R"RAW(PLAY abc_notation$)RAW"}
,{"POKE", R"RAW(POKE address, byte)RAW"}
,{"PRINT", R"RAW(PRINT expr [[,|;| ] expr ...])RAW"}
,{"PRINT USING", R"RAW(PRINT USING format; expr [, expr ...])RAW"}
,{"QUIT", R"RAW(QUIT)RAW"}
,{"QSAVE", R"RAW(QSAVE)RAW"}
,{"REM", R"RAW(REM comment)RAW"}
,{"RENUMBER", R"RAW(RENUMBER [new__start, increment, old__start, milestone])RAW"}
,{"RUN", R"RAW(RUN [start_line_number])RAW"}
,{"SAVE", R"RAW(SAVE "test.bas")RAW"}
,{"SCNCLR", R"RAW(SCNCLR [n])RAW"}
,{"SLOW", R"RAW(SLOW)RAW"}
,{"SOUND", R"RAW(SOUND voice, play$)RAW"}
,{"SPRDEF", R"RAW(SPRDEF number, chars$)RAW"}
,{"SPRITE", R"RAW(SPRITE number, on, color, priority, x2, y2)RAW"}
,{"STOP", R"RAW(STOP)RAW"}
,{"SYS", R"RAW(SYS "wget " + CHR$(22) + "www.ba67.org" + CHR$(22))RAW"}
,{"ABS", R"RAW(ABS(expr))RAW"}
,{"ASC", R"RAW(ASC("char"))RAW"}
,{"ATN", R"RAW(ATN(expr))RAW"}
,{"CHR$", R"RAW(CHR$(code))RAW"}
,{"COS", R"RAW(COS(expr))RAW"}
,{"DEC", R"RAW(PRINT DEC("FF"))RAW"}
,{"EXP", R"RAW(EXP(expr))RAW"}
,{"FRE", R"RAW(FRE(0))RAW"}
,{"HEX$", R"RAW(PRINT HEX$( $ff001234 ))RAW"}
,{"INT", R"RAW(INT(expr))RAW"}
,{"JOY", R"RAW(J = JOY(port))RAW"}
,{"LCASE$", R"RAW(LCASE$(s$))RAW"}
,{"LEFT$", R"RAW(LEFT$(string, n))RAW"}
,{"LEN", R"RAW(LEN(string))RAW"}
,{"LOG", R"RAW(LOG(expr))RAW"}
,{"MID$", R"RAW(MID$(string, start, length))RAW"}
,{"PEEK", R"RAW(PEEK(address))RAW"}
,{"PEN", R"RAW(PEN(XYXYB))RAW"}
,{"POS", R"RAW(POS(0))RAW"}
,{"POSY", R"RAW(POSY(0))RAW"}
,{"RIGHT$", R"RAW(RIGHT$(string, n))RAW"}
,{"RND", R"RAW(RND(expr))RAW"}
,{"SGN", R"RAW(SGN(expr))RAW"}
,{"SIN", R"RAW(SIN(expr))RAW"}
,{"SPC", R"RAW(SPC(n))RAW"}
,{"SQR", R"RAW(SQR(expr))RAW"}
,{"STR$", R"RAW(STR$(expr))RAW"}
,{"TAB", R"RAW(TAB(n))RAW"}
,{"TAN", R"RAW(TAN(expr))RAW"}
,{"UCASE$", R"RAW(UCASE$(s$))RAW"}
,{"VAL", R"RAW(VAL(string))RAW"}
,{"XOR", R"RAW(A = XOR(3,2))RAW"}
